{"version":3,"sources":["components/Navbar.js","components/Numenera/CharacterInfo/Pool.js","components/Numenera/CharacterInfo/StatSheet.js","components/Numenera/CharacterInfo/CharacterInfo.js","components/Numenera/Party.js","components/Numenera/NewCharacter.js","components/Numenera/CharacterInfo/EditForm.js","components/Numenera/CharacterInfo/EditModal.js","components/Numenera/NumeneraLayout.js","index.js","App.js"],"names":["Navbar","react_default","a","createElement","className","react_router_dom","to","id","Pool","props","member","useContext","UpdateContext","party","find","_useState","useState","type","Object","slicedToArray","max","parseInt","concat","edge","current","_useState3","_useState4","count","setCount","_useState5","_useState6","updated","setUpdated","updatePool","amt","updateMember","useEffect","M","Tooltip","init","document","querySelectorAll","data-position","data-tooltip","onClick","style","opacity","StatSheet","diff","mightDiff","mightEdge","mightPool","speedDiff","speedEdge","speedPool","intDiff","intEdge","intPool","CharacterInfo","slug","isVowel","descriptors","substring","job","foci","key","href","showEdit","removeMember","name","fontSize","level","effort","xp","wordBreak","length","vowels","letter","includes","Party","react_transition_group","map","index","timeout","classNames","NewCharacter","_useState2","setName","setJob","setDescriptors","_useState7","_useState8","setFoci","_useState9","_useState10","setLevel","_useState11","_useState12","setXP","_useState13","_useState14","setEffort","_useState15","_useState16","setMightPool","_useState17","_useState18","setSpeedPool","_useState19","_useState20","setIntPool","_useState21","_useState22","setMightEdge","_useState23","_useState24","setSpeedEdge","_useState25","_useState26","setIntEdge","Fragment","onSubmit","e","preventDefault","newMember","addMember","handleSubmit","getElementById","reset","onChange","target","value","htmlFor","EditForm","Tabs","querySelector","swipeable","duration","FormSelect","handleChange","field","newValue","EditModal","show","createContext","NumeneraLayout","setParty","modal","showModal","editMember","setEditMember","property","updatedValue","updatedMember","i","updatedParty","toConsumableArray","slice","isNull","JSON","parse","localStorage","getItem","setItem","stringify","Provider","uuid","mightCurrent","speedCurrent","intCurrent","window","confirm","members","filter","ReactDOM","render","AutoInit","Modal","inDuration","outDuration"],"mappings":"oMAGe,SAASA,IACtB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACbH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMD,UAAU,0BAA0BE,GAAG,KAA7C,mBACAL,EAAAC,EAAAC,cAAA,MAAII,GAAG,aAAaH,UAAU,gCAC5BH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,KAAT,QAEFL,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,KAAT,QAEFL,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,KAAT,wECVG,SAASE,EAAKC,GAG3B,IAAIC,EAASC,qBAAWC,GAAeC,MAAMC,KAAK,SAAAJ,GAAM,OAAIA,EAAOH,KAAOE,EAAMF,MAAO,KAHrDQ,EAInBC,mBAASP,EAAMQ,MAAvBA,EAJ2BC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,MAK5BK,EAAMV,EAASW,SAASX,EAAM,GAAAY,OAAIL,EAAJ,UAAmB,KACjDM,EAAOb,EAASW,SAASX,EAAM,GAAAY,OAAIL,EAAJ,UAAmB,KAClDO,EAAUd,EAASW,SAASX,EAAM,GAAAY,OAAIL,EAAJ,aAAsB,KAP5BQ,EASRT,mBAASQ,GATDE,EAAAR,OAAAC,EAAA,EAAAD,CAAAO,EAAA,GAS3BE,EAT2BD,EAAA,GASpBE,EAToBF,EAAA,GAAAG,EAUJb,mBAAS,GAVLc,EAAAZ,OAAAC,EAAA,EAAAD,CAAAW,EAAA,GAU3BE,EAV2BD,EAAA,GAUlBE,EAVkBF,EAAA,GAa5BG,EAAa,SAACC,GAClBF,EAAWD,EAAU,GACT,IAARG,EAIAP,EAAQO,GAAO,GACjBN,EAASD,EAAQO,GAJjBN,EAASR,IASLe,EAAiBxB,qBAAWC,GAA5BuB,aAWR,OAVAC,oBAAU,WACJL,EAAU,GACZI,EAAa1B,EAAMF,GAAP,GAAAe,OAAcL,EAAd,WAA6BU,KAI7CS,oBAAU,WACRC,IAAEC,QAAQC,KAAKC,SAASC,iBAAiB,eAAgB,KACxD,IAGDxC,EAAAC,EAAAC,cAAA,OAAKC,UAAS,uBAAAkB,OAAmC,IAAVK,EAAc,gBAAkB,GAAzD,KAAAL,OAA+DK,GAASP,EAAM,kBAAoB,GAAlG,KAAAE,OAAyGK,EAAQP,EAAM,GAAe,IAAVO,EAAe,mBAAqB,KAC5K1B,EAAAC,EAAAC,cAAA,QAAMC,UAAU,yBACdH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,4BAA4BsC,gBAAc,OAAOC,eAAA,GAAArB,OAAiBL,EAAjB,iBAAAK,OAAqCC,IAErF,UAATN,EACG,iBACU,UAATA,EACC,iBACA,UAGVhB,EAAAC,EAAAC,cAAA,UAAQC,UAAU,qDAAqDwC,QAAS,kBAAMX,GAAY,KAAIhC,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAAb,WACtGH,EAAAC,EAAAC,cAAA,QAAM0C,MAAO,CAAEC,QAAS,IAAMnB,EAAQ,GAAK,IAAM,IAAWA,EAX9D,IAWsEP,EAAInB,EAAAC,EAAAC,cAAA,QAAM0C,MAAO,CAAEC,QAAS,IAAM1B,EAAM,GAAK,IAAM,IACvHnB,EAAAC,EAAAC,cAAA,UAAQC,UAAU,wDAAwDwC,QAAS,kBAAMX,EAAW,KAAKhC,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAAb,QACzGH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,uCAAuCwC,QAAS,kBAAMX,EAAW,KAAIhC,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAAb,aAEzFH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,8DAA6DH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,0BAAb,gBAAuDmB,ICxD3H,SAASwB,EAAUtC,GAChC,OACER,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oCACbH,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAACK,EAAD,CAAMD,GAAIE,EAAMF,GAAIU,KAAK,QAAQ+B,KAAMvC,EAAMwC,UAAW1B,KAAMd,EAAMyC,UAAW9B,IAAKX,EAAM0C,YAC1FlD,EAAAC,EAAAC,cAACK,EAAD,CAAMD,GAAIE,EAAMF,GAAIU,KAAK,QAAQ+B,KAAMvC,EAAM2C,UAAW7B,KAAMd,EAAM4C,UAAWjC,IAAKX,EAAM6C,YAC1FrD,EAAAC,EAAAC,cAACK,EAAD,CAAMD,GAAIE,EAAMF,GAAIU,KAAK,MAAM+B,KAAMvC,EAAM8C,QAAShC,KAAMd,EAAM+C,QAASpC,IAAKX,EAAMgD,YCP7E,SAASC,EAAcjD,GAEpC,IAAIkD,EAAI,GAAArC,OAAOsC,EAAQnD,EAAMoD,YAAYC,UAAU,EAAG,IAAM,MAAQ,KAA5D,KAAAxC,OAAoEb,EAAMoD,YAA1E,KAAAvC,OAAyFb,EAAMsD,IAA/F,SAAAzC,OAA0Gb,EAAMuD,KAAhH,KAER,OACE/D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0CAA0C6D,IAAKxD,EAAMF,IAElEN,EAAAC,EAAAC,cAAA,KAAG+D,KAAK,aAAatB,QAAS,kBAAMnC,EAAM0D,SAAS1D,EAAMF,KAAKH,UAAU,oFAAmFH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAAb,SAE3JH,EAAAC,EAAAC,cAAA,UAAQyC,QAAS,kBAAMnC,EAAM2D,aAAa3D,EAAMF,KAAKH,UAAU,0EAAyEH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAAb,WACxIH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAeK,EAAM4D,MAEnCpE,EAAAC,EAAAC,cAAA,KAAGC,UAAU,GAAGyC,MAAO,CAAEyB,SAAU,SAAnC,QACQ7D,EAAM8D,MADd,mBAEuB9D,EAAM+D,OAF7B,eAGmB/D,EAAMgE,KAG3BxE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kCACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,uBAAuBsC,gBAAc,SAASC,eAAA,GAAArB,OAAiBqC,GAAQd,MAAO,CAAE6B,UAAW,eAErGf,EAAKgB,OAAS,IACVhB,EAAKG,UAAU,EAAG,KAAO,MACzBH,MAMd1D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAC4C,EAAD,CACExC,GAAIE,EAAMF,GACV4C,UAAW1C,EAAM0C,UACjBG,UAAW7C,EAAM6C,UACjBG,QAAShD,EAAMgD,QACfR,UAAWxC,EAAMwC,UACjBG,UAAW3C,EAAM2C,UACjBG,QAAS9C,EAAM8C,QACfL,UAAWzC,EAAMyC,UACjBG,UAAW5C,EAAM4C,UACjBG,QAAS/C,EAAM+C,aAQ3B,IAAMoB,EAAS,CAAC,IAAK,IAAK,IAAK,IAAK,KAC9BhB,EAAU,SAACiB,GACf,QAAID,EAAOE,SAASD,WCtDP,SAASE,EAAMtE,GAC5B,OACER,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAC6E,EAAA,gBAAD,CAAiB5E,UAAU,cAEvBK,EAAMI,MAAMoE,IAAI,SAACvE,EAAQwE,GAAT,OACdjF,EAAAC,EAAAC,cAAC6E,EAAA,cAAD,CACEf,IAAKiB,EACLC,QAAS,IACTC,WAAW,UAEXnF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAa6D,IAAKvD,EAAOH,IACtCN,EAAAC,EAAAC,cAACuD,EAAD,CACEwB,MAAOA,EACP3E,GAAIG,EAAOH,GACX8D,KAAM3D,EAAO2D,KACbN,IAAKrD,EAAOqD,IACZF,YAAanD,EAAOmD,YACpBG,KAAMtD,EAAOsD,KACbO,MAAO7D,EAAO6D,MACdE,GAAI/D,EAAO+D,GACXD,OAAQ9D,EAAO8D,OACfrB,UAAWzC,EAAOyC,UAClBG,UAAW5C,EAAO4C,UAClBG,QAAS/C,EAAO+C,QAChBR,UAAWvC,EAAOuC,UAClBG,UAAW1C,EAAO0C,UAClBG,QAAS7C,EAAO6C,QAChBL,UAAWxC,EAAOwC,UAClBG,UAAW3C,EAAO2C,UAClBG,QAAS9C,EAAO8C,QAChBW,SAAU1D,EAAM0D,SAChBC,aAAc3D,EAAM2D,qBCjCvB,SAASiB,EAAa5E,GAAO,IAAAM,EAClBC,mBAAS,qBADSsE,EAAApE,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACnCsD,EADmCiB,EAAA,GAC7BC,EAD6BD,EAAA,GAAA7D,EAEpBT,mBAAS,UAFWU,EAAAR,OAAAC,EAAA,EAAAD,CAAAO,EAAA,GAEnCsC,EAFmCrC,EAAA,GAE9B8D,EAF8B9D,EAAA,GAAAG,EAGJb,mBAAS,SAHLc,EAAAZ,OAAAC,EAAA,EAAAD,CAAAW,EAAA,GAGnCgC,EAHmC/B,EAAA,GAGtB2D,EAHsB3D,EAAA,GAAA4D,EAIlB1E,mBAAS,SAJS2E,EAAAzE,OAAAC,EAAA,EAAAD,CAAAwE,EAAA,GAInC1B,EAJmC2B,EAAA,GAI7BC,EAJ6BD,EAAA,GAAAE,EAKhB7E,mBAAS,GALO8E,EAAA5E,OAAAC,EAAA,EAAAD,CAAA2E,EAAA,GAKnCtB,EALmCuB,EAAA,GAK5BC,EAL4BD,EAAA,GAAAE,EAMtBhF,mBAAS,GANaiF,EAAA/E,OAAAC,EAAA,EAAAD,CAAA8E,EAAA,GAMnCvB,EANmCwB,EAAA,GAM/BC,EAN+BD,EAAA,GAAAE,EAOdnF,mBAAS,GAPKoF,EAAAlF,OAAAC,EAAA,EAAAD,CAAAiF,EAAA,GAOnC3B,EAPmC4B,EAAA,GAO3BC,EAP2BD,EAAA,GAAAE,EAQRtF,mBAAS,IARDuF,EAAArF,OAAAC,EAAA,EAAAD,CAAAoF,EAAA,GAQnCnD,EARmCoD,EAAA,GAQxBC,EARwBD,EAAA,GAAAE,EASRzF,mBAAS,IATD0F,EAAAxF,OAAAC,EAAA,EAAAD,CAAAuF,EAAA,GASnCnD,EATmCoD,EAAA,GASxBC,EATwBD,EAAA,GAAAE,EAUZ5F,mBAAS,IAVG6F,EAAA3F,OAAAC,EAAA,EAAAD,CAAA0F,EAAA,GAUnCnD,EAVmCoD,EAAA,GAU1BC,EAV0BD,EAAA,GAAAE,EAWR/F,mBAAS,GAXDgG,EAAA9F,OAAAC,EAAA,EAAAD,CAAA6F,EAAA,GAWnC7D,EAXmC8D,EAAA,GAWxBC,EAXwBD,EAAA,GAAAE,EAYRlG,mBAAS,GAZDmG,EAAAjG,OAAAC,EAAA,EAAAD,CAAAgG,EAAA,GAYnC7D,EAZmC8D,EAAA,GAYxBC,EAZwBD,EAAA,GAAAE,EAaZrG,mBAAS,GAbGsG,EAAApG,OAAAC,EAAA,EAAAD,CAAAmG,EAAA,GAanC7D,GAbmC8D,EAAA,GAa1BC,GAb0BD,EAAA,GAkC1C,OACErH,EAAAC,EAAAC,cAAAF,EAAAC,EAAAsH,SAAA,KACEvH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,KAAG+D,KAAK,kBAAkB9D,UAAU,oFAAoFsC,gBAAc,OAAOC,eAAa,cACxJ1C,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAAb,eAGJH,EAAAC,EAAAC,cAAA,OAAKI,GAAG,iBAAiBH,UAAU,SACjCH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,UAAd,oBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,QAAMI,GAAG,UAAUH,UAAU,UAAUqH,SAAU,SAACC,GAChDA,EAAEC,iBA9BS,WACnB,IAAMC,EAAY,CAChBvD,OACAN,MACAF,cACAG,OACAO,MAAOlD,SAASkD,GAChBE,GAAIpD,SAASoD,GACbD,OAAQnD,SAASmD,GACjBrB,UAAW9B,SAAS8B,GACpBG,UAAWjC,SAASiC,GACpBG,QAASpC,SAASoC,GAClBP,UAAW7B,SAAS6B,GACpBG,UAAWhC,SAASgC,GACpBG,QAASnC,SAASmC,KAEpB/C,EAAMoH,UAAUD,GAeRE,GACAtF,SAASuF,eAAe,WAAWC,UAGnC/H,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAEbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,SAAOI,GAAG,OAAOU,KAAK,OAAOgH,SAAU,SAACP,GAAD,OAAOnC,EAAQmC,EAAEQ,OAAOC,UAC/DlI,EAAAC,EAAAC,cAAA,SAAOiI,QAAQ,QAAf,SAGFnI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,SAASG,GAAG,MAAM0H,SAAU,SAACP,GAAD,OAAOlC,EAAOkC,EAAEQ,OAAOC,SACnElI,EAAAC,EAAAC,cAAA,UAAQgI,MAAM,UAAd,UACAlI,EAAAC,EAAAC,cAAA,UAAQgI,MAAM,QAAd,QACAlI,EAAAC,EAAAC,cAAA,UAAQgI,MAAM,QAAd,QACAlI,EAAAC,EAAAC,cAAA,UAAQgI,MAAM,SAAd,UAEFlI,EAAAC,EAAAC,cAAA,SAAOiI,QAAQ,OAAf,SAIJnI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,SAAOI,GAAG,cAAcU,KAAK,OAAOgH,SAAU,SAACP,GAAD,OAAOjC,EAAeiC,EAAEQ,OAAOC,UAC7ElI,EAAAC,EAAAC,cAAA,SAAOiI,QAAQ,eAAf,kBAGFnI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,SAAOI,GAAG,OAAOU,KAAK,OAAOgH,SAAU,SAACP,GAAD,OAAO9B,EAAQ8B,EAAEQ,OAAOC,UAC/DlI,EAAAC,EAAAC,cAAA,SAAOiI,QAAQ,QAAf,SAEFnI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAEbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,SAAOI,GAAG,QAAQU,KAAK,OAAOgH,SAAU,SAACP,GAAD,OAAO3B,EAAS2B,EAAEQ,OAAOC,UACjElI,EAAAC,EAAAC,cAAA,SAAOiI,QAAQ,SAAf,UAGFnI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,SAAOI,GAAG,KAAKU,KAAK,OAAOgH,SAAU,SAACP,GAAD,OAAOxB,EAAMwB,EAAEQ,OAAOC,UAC3DlI,EAAAC,EAAAC,cAAA,SAAOiI,QAAQ,MAAf,OAGFnI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,SAAOI,GAAG,SAASU,KAAK,OAAOgH,SAAU,SAACP,GAAD,OAAOrB,EAAUqB,EAAEQ,OAAOC,UACnElI,EAAAC,EAAAC,cAAA,SAAOiI,QAAQ,UAAf,YAGJnI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAEbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,SAAOI,GAAG,YAAYU,KAAK,SAASgH,SAAU,SAACP,GAAD,OAAOlB,EAAakB,EAAEQ,OAAOC,UAC3ElI,EAAAC,EAAAC,cAAA,SAAOiI,QAAQ,aAAf,eAGFnI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,SAAOI,GAAG,YAAYU,KAAK,SAASgH,SAAU,SAACP,GAAD,OAAOf,EAAae,EAAEQ,OAAOC,UAC3ElI,EAAAC,EAAAC,cAAA,SAAOiI,QAAQ,aAAf,eAGFnI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,SAAOI,GAAG,UAAUU,KAAK,SAASgH,SAAU,SAACP,GAAD,OAAOZ,EAAWY,EAAEQ,OAAOC,UACvElI,EAAAC,EAAAC,cAAA,SAAOiI,QAAQ,WAAf,cAGJnI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAEbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,SAAOI,GAAG,YAAYU,KAAK,SAASgH,SAAU,SAACP,GAAD,OAAOT,EAAaS,EAAEQ,OAAOC,UAC3ElI,EAAAC,EAAAC,cAAA,SAAOiI,QAAQ,aAAf,eAGFnI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,SAAOI,GAAG,YAAYU,KAAK,SAASgH,SAAU,SAACP,GAAD,OAAON,EAAaM,EAAEQ,OAAOC,UAC3ElI,EAAAC,EAAAC,cAAA,SAAOiI,QAAQ,aAAf,eAGFnI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,SAAOI,GAAG,UAAUU,KAAK,SAASgH,SAAU,SAACP,GAAD,OAAOH,GAAWG,EAAEQ,OAAOC,UACvElI,EAAAC,EAAAC,cAAA,SAAOiI,QAAQ,WAAf,cAIJnI,EAAAC,EAAAC,cAAA,UAAQC,UAAU,uEAAlB,kBCjIG,SAASiI,EAAS5H,GAE/B2B,oBAAU,WACRC,IAAEiG,KAAK/F,KAAKC,SAAS+F,cAAc,SAAU,CAAEC,WAAW,EAAMC,SAAU,MAC1EpG,IAAEqG,WAAWnG,KAAKC,SAASC,iBAAiB,WAAY,KACvD,IAEH,IAAMkG,EAAe,SAACC,EAAOC,GAC3BpI,EAAM0B,aAAa1B,EAAMC,OAAOH,GAAIqI,EAAOC,IAG7C,OACE5I,EAAAC,EAAAC,cAAA,QAAMsH,SAAU,SAACC,GAAD,OAAOA,EAAEC,mBACvB1H,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,oBAAYM,EAAMC,OAAO2D,MACzBpE,EAAAC,EAAAC,cAAA,cAAYC,UAAU,kBAAtB,GAAAkB,OAEOsC,EAAQnD,EAAMC,OAAOmD,YAAYC,UAAU,EAAG,IAAM,MAAQ,KAFnE,KAAAxC,OAE2Eb,EAAMC,OAAOmD,YAFxF,KAAAvC,OAEuGb,EAAMC,OAAOqD,IAFpH,SAAAzC,OAE+Hb,EAAMC,OAAOsD,KAF5I,MAMA/D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,kBACZH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAaH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,GAAG8D,KAAK,YAArB,YAC3BjE,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAaH,EAAAC,EAAAC,cAAA,KAAG+D,KAAK,UAAR,YAK/BjE,EAAAC,EAAAC,cAAA,OAAKI,GAAG,UAAUH,UAAU,oBAE1BH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,SAAOI,GAAG,OAAOU,KAAK,OAAOgH,SAAU,SAACP,GAAD,OAAOiB,EAAa,OAAQjB,EAAEQ,OAAOC,QAAQA,MAAO1H,EAAMC,OAAO2D,OACxGpE,EAAAC,EAAAC,cAAA,SAAOiI,QAAQ,OAAOhI,UAAU,UAAhC,SAGFH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,SAASG,GAAG,MAAM0H,SAAU,SAACP,GAAD,OAAOiB,EAAa,MAAOjB,EAAEQ,OAAOC,SAChFlI,EAAAC,EAAAC,cAAA,UAAQgI,MAAM,UAAd,UACAlI,EAAAC,EAAAC,cAAA,UAAQgI,MAAM,QAAd,QACAlI,EAAAC,EAAAC,cAAA,UAAQgI,MAAM,QAAd,QACAlI,EAAAC,EAAAC,cAAA,UAAQgI,MAAM,SAAd,UAEFlI,EAAAC,EAAAC,cAAA,SAAOiI,QAAQ,OAAf,QAGFnI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACbH,EAAAC,EAAAC,cAAA,SAAOI,GAAG,cAAcU,KAAK,OAAOgH,SAAU,SAACP,GAAD,OAAOiB,EAAa,cAAejB,EAAEQ,OAAOC,QAAQA,MAAqC,UAA7B1H,EAAMC,OAAOmD,YAA2B,GAAKpD,EAAMC,OAAOmD,cACpK5D,EAAAC,EAAAC,cAAA,SAAOiI,QAAQ,cAAchI,UAAU,UAAvC,gBAGFH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACbH,EAAAC,EAAAC,cAAA,SAAOI,GAAG,OAAOU,KAAK,OAAOgH,SAAU,SAACP,GAAD,OAAOiB,EAAa,OAAQjB,EAAEQ,OAAOC,QAAQA,MAA8B,UAAtB1H,EAAMC,OAAOsD,KAAoB,GAAKvD,EAAMC,OAAOsD,OAC/I/D,EAAAC,EAAAC,cAAA,SAAOiI,QAAQ,OAAOhI,UAAU,UAAhC,UAGJH,EAAAC,EAAAC,cAAA,OAAKI,GAAG,QAAQH,UAAU,WACxBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAEbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,SAAOI,GAAG,QAAQU,KAAK,SAASgH,SAAU,SAACP,GAAD,OAAOiB,EAAa,QAASjB,EAAEQ,OAAOC,QAAQA,MAAO1H,EAAMC,OAAO6D,QAC5GtE,EAAAC,EAAAC,cAAA,SAAOC,UAAU,SAASgI,QAAQ,SAAlC,UAGFnI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,SAAOI,GAAG,KAAKU,KAAK,SAASgH,SAAU,SAACP,GAAD,OAAOiB,EAAa,KAAMjB,EAAEQ,OAAOC,QAAQA,MAAO1H,EAAMC,OAAO+D,KACtGxE,EAAAC,EAAAC,cAAA,SAAOC,UAAU,SAASgI,QAAQ,MAAlC,OAGFnI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,SAAOI,GAAG,SAASU,KAAK,SAASgH,SAAU,SAACP,GAAD,OAAOiB,EAAa,SAAUjB,EAAEQ,OAAOC,QAAQA,MAAO1H,EAAMC,OAAO8D,SAC9GvE,EAAAC,EAAAC,cAAA,SAAOC,UAAU,SAASgI,QAAQ,UAAlC,YAGJnI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAEbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,SAAOI,GAAG,YAAYU,KAAK,SAASgH,SAAU,SAACP,GAAD,OAAOiB,EAAa,YAAajB,EAAEQ,OAAOC,QAAQA,MAAO1H,EAAMC,OAAOyC,YACpHlD,EAAAC,EAAAC,cAAA,SAAOC,UAAU,SAASgI,QAAQ,aAAlC,uBAGFnI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,SAAOI,GAAG,YAAYU,KAAK,SAASgH,SAAU,SAACP,GAAD,OAAOiB,EAAa,YAAajB,EAAEQ,OAAOC,QAAQA,MAAO1H,EAAMC,OAAO4C,YACpHrD,EAAAC,EAAAC,cAAA,SAAOC,UAAU,SAASgI,QAAQ,aAAlC,uBAGFnI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,SAAOI,GAAG,UAAUU,KAAK,SAASgH,SAAU,SAACP,GAAD,OAAOiB,EAAa,UAAWjB,EAAEQ,OAAOC,QAAQA,MAAO1H,EAAMC,OAAO+C,UAChHxD,EAAAC,EAAAC,cAAA,SAAOC,UAAU,SAASgI,QAAQ,WAAlC,4BAGJnI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAEbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,SAAOI,GAAG,YAAYU,KAAK,SAASgH,SAAU,SAACP,GAAD,OAAOiB,EAAa,YAAajB,EAAEQ,OAAOC,QAAQA,MAAO1H,EAAMC,OAAOwC,YACpHjD,EAAAC,EAAAC,cAAA,SAAOC,UAAU,SAASgI,QAAQ,aAAlC,eAGFnI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,SAAOI,GAAG,YAAYU,KAAK,SAASgH,SAAU,SAACP,GAAD,OAAOiB,EAAa,YAAajB,EAAEQ,OAAOC,QAAQA,MAAO1H,EAAMC,OAAO2C,YACpHpD,EAAAC,EAAAC,cAAA,SAAOC,UAAU,SAASgI,QAAQ,aAAlC,eAGFnI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,SAAOI,GAAG,UAAUU,KAAK,SAASgH,SAAU,SAACP,GAAD,OAAOiB,EAAa,UAAWjB,EAAEQ,OAAOC,QAAQA,MAAO1H,EAAMC,OAAO8C,UAChHvD,EAAAC,EAAAC,cAAA,SAAOC,UAAU,SAASgI,QAAQ,WAAlC,uBAMVnI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,iDAAlB,WAOR,IAAMwE,EAAS,CAAC,IAAK,IAAK,IAAK,IAAK,KAC9BhB,EAAU,SAACiB,GACf,QAAID,EAAOE,SAASD,IC1HP,SAASiE,EAAUrI,GAGhC,OACER,EAAAC,EAAAC,cAAAF,EAAAC,EAAAsH,SAAA,KACEvH,EAAAC,EAAAC,cAAA,OAAKI,GAAG,YAAYH,UAAU,SAEzBK,EAAMsI,KACL9I,EAAAC,EAAAC,cAACkI,EAAD,CAAU3H,OAAQD,EAAMC,OAAQyB,aAAc1B,EAAM0B,eAClD,KCJP,IAAMvB,EAAgBoI,0BAEd,SAASC,IAAiB,IAAAlI,EAEbC,mBAAS,IAFIsE,EAAApE,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAEhCF,EAFgCyE,EAAA,GAEzB4D,EAFyB5D,EAAA,GAAA7D,EAGZT,oBAAS,GAHGU,EAAAR,OAAAC,EAAA,EAAAD,CAAAO,EAAA,GAGhC0H,EAHgCzH,EAAA,GAGzB0H,EAHyB1H,EAAA,GAAAG,EAIHb,mBAAS,IAJNc,EAAAZ,OAAAC,EAAA,EAAAD,CAAAW,EAAA,GAIhCwH,EAJgCvH,EAAA,GAIpBwH,EAJoBxH,EAAA,GA8CjCK,EAAe,SAAC5B,EAAIgJ,EAAUC,GAClC,IAAItE,EAGAuE,EAAgB5I,EAAMC,KAAK,SAACJ,EAAQgJ,GACtC,OAAIhJ,EAAOH,KAAOA,IAChB2E,EAAQwE,GACD,KAKX,GAAID,EAAcF,KAAcC,EAAhC,CAEAC,EAAcF,GAAYC,EAC1B,IAAIG,EAAY,GAAArI,OAAAJ,OAAA0I,EAAA,EAAA1I,CAAOL,EAAMgJ,MAAM,EAAG3E,IAAtB,CAA8BuE,GAA9BvI,OAAA0I,EAAA,EAAA1I,CAAgDL,EAAMgJ,MAAM3E,EAAQ,EAAGrE,EAAM8D,UACzFgF,IAAiB9I,GACnBqI,EAASS,KAgBb,OAZAvH,oBAAU,YACH0H,iBAAOC,KAAKC,MAAMC,aAAaC,QAAQ,YAAcH,KAAKC,MAAMC,aAAaC,QAAQ,UAAUvF,OAAS,GAC3GuE,EAASa,KAAKC,MAAMC,aAAaC,QAAQ,YAG1C,IAGH9H,oBAAU,WACR6H,aAAaE,QAAQ,QAASJ,KAAKK,UAAUvJ,MAI7CZ,EAAAC,EAAAC,cAACS,EAAcyJ,SAAf,CAAwBlC,MAAO,CAAEtH,QAAOsB,iBACtClC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAEbH,EAAAC,EAAAC,cAACkF,EAAD,CAAcwC,UA5EF,SAACnH,GACjBwI,EAASrI,EAAMS,OAAO,CACpBf,GAAI+J,MACJjG,KAAM3D,EAAO2D,KACbN,IAAKrD,EAAOqD,IACZF,YAAanD,EAAOmD,YACpBG,KAAMtD,EAAOsD,KACbO,MAAO7D,EAAO6D,MACdE,GAAI/D,EAAO+D,GACXD,OAAQ9D,EAAO8D,OACfrB,UAAWzC,EAAOyC,UAClBG,UAAW5C,EAAO4C,UAClBG,QAAS/C,EAAO+C,QAChB8G,aAAc7J,EAAOyC,UACrBqH,aAAc9J,EAAO4C,UACrBmH,WAAY/J,EAAO+C,QACnBP,UAAWxC,EAAOwC,UAClBG,UAAW3C,EAAO2C,UAClBG,QAAS9C,EAAO8C,cA4DdvD,EAAAC,EAAAC,cAAC2I,EAAD,CAAWpI,OAAQ2I,EAAYlH,aAAcA,EAAc4G,KAAMI,IAEjElJ,EAAAC,EAAAC,cAAC4E,EAAD,CAAOlE,MAAOA,EAAOuD,aAzDN,SAAC7D,GAEpB,IAAqB,IADFmK,OAAOC,QAAP,mCAAArJ,OAAkDT,EAAMC,KAAK,SAAAJ,GAAM,OAAIA,EAAOH,KAAOA,IAAI8D,KAAzF,MACnB,CAEA,IAAIuG,EAAU/J,EAAMgK,OAAO,SAAAnK,GAAM,OAAIA,EAAOH,KAAOA,IACnD2I,EAAS0B,KAoD4CzG,SAhDtC,SAAC5D,GAEhB+I,EAAczI,EAAMC,KAAK,SAAAJ,GAAM,OAAIA,EAAOH,KAAOA,KACjD6I,GAAU,oBChDd0B,IAASC,OAAO9K,EAAAC,EAAAC,cCID,WAUb,OARAiC,oBAAU,WACRC,IAAE2I,WACF3I,IAAE4I,MAAM1I,KAAKC,SAASC,iBAAiB,UAAW,CAChDyI,WAAY,EACZC,YAAa,KAEd,IAGDlL,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACEJ,EAAAC,EAAAC,cAACH,EAAD,MACAC,EAAAC,EAAAC,cAAC8I,EAAD,QDjBU,MAASzG,SAASuF,eAAe","file":"static/js/main.8e60ded4.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar() {\r\n  return (\r\n    <nav className=\"red\">\r\n      <div className=\"nav-wrapper container\">\r\n        <Link className=\"brand-logo left niconne\" to='/'>Tabletop Tavern</Link>\r\n        <ul id=\"nav-mobile\" className=\"right hide-on-small-and-down\">\r\n          <li>\r\n            <Link to='#'>One</Link>\r\n          </li>\r\n          <li>\r\n            <Link to='#'>Two</Link>\r\n          </li>\r\n          <li>\r\n            <Link to='#'>Three</Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n","import React, { useState, useContext, useEffect } from 'react';\r\nimport M from 'materialize-css';\r\nimport { UpdateContext } from '../NumeneraLayout';\r\n\r\n\r\n// Component for Character Pools \r\nexport default function Pool(props) {\r\n  // Types = Might, Intellect, Speed\r\n  // Pool Max/Edge is recieved from UpdateContext\r\n  let member = useContext(UpdateContext).party.find(member => member.id === props.id) || null; // Fallback to null to prevent delete errors\r\n  const [type] = useState(props.type);\r\n  const max = member ? parseInt(member[`${type}Pool`]) : null;\r\n  const edge = member ? parseInt(member[`${type}Edge`]) : null;\r\n  const current = member ? parseInt(member[`${type}Current`]) : null;\r\n\r\n  const [count, setCount] = useState(current); // Initial Count = max + stored difference (which is saved in localStorage)\r\n  const [updated, setUpdated] = useState(0); // Count #times updated => used to prevent excessive useEffect calls\r\n\r\n\r\n  const updatePool = (amt) => {\r\n    setUpdated(updated + 1);\r\n    if (amt === 0) {\r\n      setCount(max);\r\n      return;\r\n    }\r\n    if (count + amt >= 0)\r\n      setCount(count + amt);\r\n  }\r\n\r\n  // Use Context to update member state with updateMember\r\n  // Used to save current pool values\r\n  const { updateMember } = useContext(UpdateContext);\r\n  useEffect(() => {\r\n    if (updated > 0) // Update only if state (count) changes\r\n      updateMember(props.id, `${type}Current`, count); // Current pool\r\n  });\r\n\r\n  // Tooltips\r\n  useEffect(() => {\r\n    M.Tooltip.init(document.querySelectorAll('.tooltipped'), {});\r\n  }, []);\r\n\r\n  return (\r\n    <div className={`collection-item row ${count === 0 ? 'red lighten-4' : ''} ${count >= max ? 'green lighten-4' : ''} ${(count < max / 3 && count !== 0) ? 'yellow lighten-4' : ''}`}>\r\n      <span className=\"col s7 valign-wrapper\">\r\n        <i className=\"material-icons tooltipped\" data-position=\"left\" data-tooltip={`${type} Pool, Edge: ${edge}`}>\r\n          {\r\n            (type === 'might')\r\n              ? 'fitness_center'\r\n              : (type === 'speed')\r\n                ? 'directions_run'\r\n                : 'school'\r\n          }\r\n        </i>\r\n        <button className=\"red white-text btn waves-effect waves-dark smaller\" onClick={() => updatePool(-1)}><i className=\"material-icons\">remove</i></button>\r\n        <span style={{ opacity: 0 }}>{count < 10 ? '_' : ''}</span>{count}/{max}<span style={{ opacity: 0 }}>{max < 10 ? '_' : ''}</span>\r\n        <button className=\"green white-text btn waves-effect waves-light smaller\" onClick={() => updatePool(+1)}><i className=\"material-icons\">add</i></button>\r\n        <button className=\"btn smaller waves-effect waves-light\" onClick={() => updatePool(0)}><i className=\"material-icons\">refresh</i></button>\r\n      </span>\r\n      <span className=\"col s1 offset-s3 valign-wrapper mt-half hide-on-small-only\"><i className=\"material-icons mr-half\">arrow_upward</i>{edge}</span>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport Pool from './Pool';\r\n\r\nexport default function StatSheet(props) {\r\n  return (\r\n    <div className=\"card-action grey lighten-4 mt--2\">\r\n      <br />\r\n      {/* Character Stat Pools */}\r\n      <div className=\"collection\">\r\n        <Pool id={props.id} type=\"might\" diff={props.mightDiff} edge={props.mightEdge} max={props.mightPool} />\r\n        <Pool id={props.id} type=\"speed\" diff={props.speedDiff} edge={props.speedEdge} max={props.speedPool} />\r\n        <Pool id={props.id} type=\"int\" diff={props.intDiff} edge={props.intEdge} max={props.intPool} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport StatSheet from './StatSheet';\r\n\r\n// Character Component\r\nexport default function CharacterInfo(props) {\r\n  // Character Slug\r\n  let slug = (`${isVowel(props.descriptors.substring(0, 1)) ? 'An ' : 'A '} ${props.descriptors} ${props.job} who ${props.foci}.`);\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"card medium col s12 z-depth-2 hoverable\" key={props.id}>\r\n        {/* Edit Button */}\r\n        <a href=\"#editModal\" onClick={() => props.showEdit(props.id)} className=\"modal-trigger btn-floating blue waves-effect waves-light right halfway-fab mb-17\"><i className=\"material-icons\">edit</i></a>\r\n        {/* Remove Button */}\r\n        <button onClick={() => props.removeMember(props.id)} className=\"btn-floating red waves-effect waves-light right halfway-fab mb-17 mr-4\"><i className=\"material-icons\">delete</i></button>\r\n        <div className=\"card-content p-1 pr-2\">\r\n          <div className=\"row\">\r\n            <div className=\"col s12 m6\">\r\n              <h4 className=\"card-title\" >{props.name}</h4>\r\n              {/* Level/Experience/Effort Points */}\r\n              <p className=\"\" style={{ fontSize: '16px' }}>\r\n                Lvl: {props.level}\r\n                &nbsp;&nbsp;Effort: {props.effort}\r\n                &nbsp;&nbsp;XP: {props.xp}\r\n              </p>\r\n            </div>\r\n            <div className=\"col s6 mt-1 hide-on-small-only\">\r\n              <h6 className=\"grey-text tooltipped\" data-position=\"bottom\" data-tooltip={`${slug}`} style={{ wordBreak: 'break-word' }}>\r\n                {\r\n                  slug.length > 100\r\n                    ? slug.substring(0, 100) + '...'\r\n                    : slug\r\n                }\r\n              </h6>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"card-content\">\r\n          <StatSheet\r\n            id={props.id}\r\n            mightPool={props.mightPool}\r\n            speedPool={props.speedPool}\r\n            intPool={props.intPool}\r\n            mightDiff={props.mightDiff}\r\n            speedDiff={props.speedDiff}\r\n            intDiff={props.intDiff}\r\n            mightEdge={props.mightEdge}\r\n            speedEdge={props.speedEdge}\r\n            intEdge={props.intEdge}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst vowels = ['a', 'e', 'i', 'o', 'u'];\r\nconst isVowel = (letter) => {\r\n  if (vowels.includes(letter))\r\n    return true;\r\n  return false;\r\n}","import React from 'react'\r\nimport CharacterInfo from './CharacterInfo/CharacterInfo';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\n\r\nexport default function Party(props) {\r\n  return (\r\n    <div className=\"party row mt-2\">\r\n      <TransitionGroup className=\"transition\">\r\n        {\r\n          props.party.map((member, index) =>\r\n            <CSSTransition\r\n              key={index}\r\n              timeout={100}\r\n              classNames=\"member\"\r\n            >\r\n              <div className=\"col m12 l6\" key={member.id}>\r\n                <CharacterInfo\r\n                  index={index}\r\n                  id={member.id}\r\n                  name={member.name}\r\n                  job={member.job}\r\n                  descriptors={member.descriptors}\r\n                  foci={member.foci}\r\n                  level={member.level}\r\n                  xp={member.xp}\r\n                  effort={member.effort}\r\n                  mightPool={member.mightPool}\r\n                  speedPool={member.speedPool}\r\n                  intPool={member.intPool}\r\n                  mightDiff={member.mightDiff}\r\n                  speedDiff={member.speedDiff}\r\n                  intDiff={member.intDiff}\r\n                  mightEdge={member.mightEdge}\r\n                  speedEdge={member.speedEdge}\r\n                  intEdge={member.intEdge}\r\n                  showEdit={props.showEdit}\r\n                  removeMember={props.removeMember}\r\n                />\r\n              </div>\r\n            </CSSTransition>\r\n          )\r\n        }\r\n      </TransitionGroup>\r\n\r\n    </div >\r\n  )\r\n}\r\n","// Component for adding new characters to the party\r\nimport React, { useState } from 'react'\r\n\r\nexport default function NewCharacter(props) {\r\n  const [name, setName] = useState('Unnamed Character');\r\n  const [job, setJob] = useState('Glaive');\r\n  const [descriptors, setDescriptors] = useState('[...]');\r\n  const [foci, setFoci] = useState('[...]');\r\n  const [level, setLevel] = useState(1);\r\n  const [xp, setXP] = useState(0);\r\n  const [effort, setEffort] = useState(1);\r\n  const [mightPool, setMightPool] = useState(10);\r\n  const [speedPool, setSpeedPool] = useState(10);\r\n  const [intPool, setIntPool] = useState(10);\r\n  const [mightEdge, setMightEdge] = useState(0);\r\n  const [speedEdge, setSpeedEdge] = useState(0);\r\n  const [intEdge, setIntEdge] = useState(0);\r\n\r\n  const handleSubmit = () => {\r\n    const newMember = {\r\n      name,\r\n      job,\r\n      descriptors,\r\n      foci,\r\n      level: parseInt(level),\r\n      xp: parseInt(xp),\r\n      effort: parseInt(effort),\r\n      mightPool: parseInt(mightPool),\r\n      speedPool: parseInt(speedPool),\r\n      intPool: parseInt(intPool),\r\n      mightEdge: parseInt(mightEdge),\r\n      speedEdge: parseInt(speedEdge),\r\n      intEdge: parseInt(intEdge),\r\n    };\r\n    props.addMember(newMember);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"fixed-action-btn\">\r\n        <a href=\"#newMemberModal\" className=\"mt-1 btn-floating btn-large red waves-effect waves-light modal-trigger tooltipped\" data-position=\"left\" data-tooltip=\"Add Member\">\r\n          <i className=\"material-icons\">group_add</i>\r\n        </a>\r\n      </div>\r\n      <div id=\"newMemberModal\" className=\"modal\">\r\n        <h3 className=\"center\">New Party Member</h3>\r\n        <div className=\"row\">\r\n          <form id='addForm' className=\"col s12\" onSubmit={(e) => {\r\n            e.preventDefault();\r\n            handleSubmit();\r\n            document.getElementById('addForm').reset();\r\n          }\r\n          }>\r\n            <div className=\"row\">\r\n              {/* Member Name */}\r\n              <div className=\"col s9 input-field\">\r\n                <input id=\"name\" type=\"text\" onChange={(e) => setName(e.target.value)}></input>\r\n                <label htmlFor=\"name\">Name</label>\r\n              </div>\r\n              {/* Job */}\r\n              <div className=\"col s3 input-field\">\r\n                <select className=\"select\" id=\"job\" onChange={(e) => setJob(e.target.value)}>\r\n                  <option value=\"Glaive\">Glaive</option>\r\n                  <option value=\"Nano\">Nano</option>\r\n                  <option value=\"Jack\">Jack</option>\r\n                  <option value=\"Other\">Other</option>\r\n                </select>\r\n                <label htmlFor=\"job\">Job</label>\r\n              </div>\r\n            </div>\r\n            {/* Descriptors */}\r\n            <div className=\"input-field\">\r\n              <input id=\"descriptors\" type=\"text\" onChange={(e) => setDescriptors(e.target.value)}></input>\r\n              <label htmlFor=\"descriptors\">Descriptor(s)</label>\r\n            </div>\r\n            {/* Foci */}\r\n            <div className=\"input-field\">\r\n              <input id=\"foci\" type=\"text\" onChange={(e) => setFoci(e.target.value)}></input>\r\n              <label htmlFor=\"foci\">Foci</label>\r\n            </div>\r\n            <div className=\"row\">\r\n              {/* level */}\r\n              <div className=\"col s4 input-field\">\r\n                <input id=\"level\" type=\"text\" onChange={(e) => setLevel(e.target.value)}></input>\r\n                <label htmlFor=\"level\">Level</label>\r\n              </div>\r\n              {/* xp */}\r\n              <div className=\"col s4 input-field\">\r\n                <input id=\"xp\" type=\"text\" onChange={(e) => setXP(e.target.value)}></input>\r\n                <label htmlFor=\"xp\">XP</label>\r\n              </div>\r\n              {/* effort */}\r\n              <div className=\"col s4 input-field\">\r\n                <input id=\"effort\" type=\"text\" onChange={(e) => setEffort(e.target.value)}></input>\r\n                <label htmlFor=\"effort\">Effort</label>\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              {/* Might Pool */}\r\n              <div className=\"col s4 input-field\">\r\n                <input id=\"mightPool\" type=\"number\" onChange={(e) => setMightPool(e.target.value)}></input>\r\n                <label htmlFor=\"mightPool\">Might Pool</label>\r\n              </div>\r\n              {/* Speed Pool */}\r\n              <div className=\"col s4 input-field\">\r\n                <input id=\"speedPool\" type=\"number\" onChange={(e) => setSpeedPool(e.target.value)}></input>\r\n                <label htmlFor=\"speedPool\">Speed Pool</label>\r\n              </div>\r\n              {/* Intellect Pool */}\r\n              <div className=\"col s4 input-field\">\r\n                <input id=\"intPool\" type=\"number\" onChange={(e) => setIntPool(e.target.value)}></input>\r\n                <label htmlFor=\"intPool\">Int Pool</label>\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              {/* Might Edge */}\r\n              <div className=\"col s4 input-field\">\r\n                <input id=\"mightEdge\" type=\"number\" onChange={(e) => setMightEdge(e.target.value)}></input>\r\n                <label htmlFor=\"mightEdge\">Might Edge</label>\r\n              </div>\r\n              {/* Speed Edge */}\r\n              <div className=\"col s4 input-field\">\r\n                <input id=\"speedEdge\" type=\"number\" onChange={(e) => setSpeedEdge(e.target.value)}></input>\r\n                <label htmlFor=\"speedEdge\">Speed Edge</label>\r\n              </div>\r\n              {/* Intellect Edge */}\r\n              <div className=\"col s4 input-field\">\r\n                <input id=\"intEdge\" type=\"number\" onChange={(e) => setIntEdge(e.target.value)}></input>\r\n                <label htmlFor=\"intEdge\">Int Edge</label>\r\n              </div>\r\n            </div>\r\n\r\n            <button className=\"modal-close right mt-1 mb-1 btn light-blue waves-effect waves-light\">Add Member</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\n","import React, { useEffect } from 'react';\r\nimport M from 'materialize-css';\r\n\r\nexport default function EditForm(props) {\r\n  // Initialize Materialize CSS Tabs\r\n  useEffect(() => {\r\n    M.Tabs.init(document.querySelector('.tabs'), { swipeable: true, duration: 100 });\r\n    M.FormSelect.init(document.querySelectorAll('.select'), {});\r\n  }, []);\r\n\r\n  const handleChange = (field, newValue) => {\r\n    props.updateMember(props.member.id, field, newValue);\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={(e) => e.preventDefault()}>\r\n      <div className=\"modal-content\">\r\n        <h4>Edit - {props.member.name}</h4>\r\n        <blockquote className=\"grey-text mb-2\">\r\n          {\r\n            `${isVowel(props.member.descriptors.substring(0, 1)) ? 'An ' : 'A '} ${props.member.descriptors} ${props.member.job} who ${props.member.foci}.`\r\n          }\r\n        </blockquote>\r\n        {/* Tabs */}\r\n        <div className=\"row grey lighten-3\">\r\n          <div className=\"col s12\">\r\n            <ul className=\"tabs z-depth-1\">\r\n              <li className=\"tab col s6\"><a className=\"\" href=\"#details\">Details</a></li>\r\n              <li className=\"tab col s6\"><a href=\"#stats\">Stats</a></li>\r\n            </ul>\r\n          </div>\r\n          {/* Tab Content */}\r\n          {/* Details */}\r\n          <div id=\"details\" className=\"col s12 mt-3 row\">\r\n            {/* Member Name */}\r\n            <div className=\"input-field col s6\">\r\n              <input id=\"name\" type=\"text\" onChange={(e) => handleChange('name', e.target.value)} value={props.member.name}></input>\r\n              <label htmlFor=\"name\" className=\"active\">Name</label>\r\n            </div>\r\n            {/* Job */}\r\n            <div className=\"col s6 input-field\">\r\n              <select className=\"select\" id=\"job\" onChange={(e) => handleChange('job', e.target.value)}>\r\n                <option value=\"Glaive\">Glaive</option>\r\n                <option value=\"Nano\">Nano</option>\r\n                <option value=\"Jack\">Jack</option>\r\n                <option value=\"Other\">Other</option>\r\n              </select>\r\n              <label htmlFor=\"job\">Job</label>\r\n            </div>\r\n            {/* Descriptors */}\r\n            <div className=\"input-field col s12\">\r\n              <input id=\"descriptors\" type=\"text\" onChange={(e) => handleChange('descriptors', e.target.value)} value={(props.member.descriptors === '[...]') ? '' : props.member.descriptors}></input>\r\n              <label htmlFor=\"descriptors\" className=\"active\">Descriptors</label>\r\n            </div>\r\n            {/* Foci */}\r\n            <div className=\"input-field col s12\">\r\n              <input id=\"foci\" type=\"text\" onChange={(e) => handleChange('foci', e.target.value)} value={(props.member.foci === '[...]') ? '' : props.member.foci}></input>\r\n              <label htmlFor=\"foci\" className=\"active\">Foci</label>\r\n            </div>\r\n          </div>\r\n          <div id=\"stats\" className=\"col s12\">\r\n            <div className=\"row mt-3\">\r\n              {/* level */}\r\n              <div className=\"col s4 input-field\">\r\n                <input id=\"level\" type=\"number\" onChange={(e) => handleChange('level', e.target.value)} value={props.member.level}></input>\r\n                <label className=\"active\" htmlFor=\"level\">Level</label>\r\n              </div>\r\n              {/* xp */}\r\n              <div className=\"col s4 input-field\">\r\n                <input id=\"xp\" type=\"number\" onChange={(e) => handleChange('xp', e.target.value)} value={props.member.xp}></input>\r\n                <label className=\"active\" htmlFor=\"xp\">XP</label>\r\n              </div>\r\n              {/* effort */}\r\n              <div className=\"col s4 input-field\">\r\n                <input id=\"effort\" type=\"number\" onChange={(e) => handleChange('effort', e.target.value)} value={props.member.effort}></input>\r\n                <label className=\"active\" htmlFor=\"effort\">Effort</label>\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              {/* Might Pool */}\r\n              <div className=\"col s4 input-field\">\r\n                <input id=\"mightPool\" type=\"number\" onChange={(e) => handleChange('mightPool', e.target.value)} value={props.member.mightPool}></input>\r\n                <label className=\"active\" htmlFor=\"mightPool\">Might Pool Maximum</label>\r\n              </div>\r\n              {/* Speed Pool */}\r\n              <div className=\"col s4 input-field\">\r\n                <input id=\"speedPool\" type=\"number\" onChange={(e) => handleChange('speedPool', e.target.value)} value={props.member.speedPool}></input>\r\n                <label className=\"active\" htmlFor=\"speedPool\">Speed Pool Maximum</label>\r\n              </div>\r\n              {/* Intellect Pool */}\r\n              <div className=\"col s4 input-field\">\r\n                <input id=\"intPool\" type=\"number\" onChange={(e) => handleChange('intPool', e.target.value)} value={props.member.intPool}></input>\r\n                <label className=\"active\" htmlFor=\"intPool\">Intellect Pool Maximum</label>\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              {/* Might Edge */}\r\n              <div className=\"col s4 input-field\">\r\n                <input id=\"mightEdge\" type=\"number\" onChange={(e) => handleChange('mightEdge', e.target.value)} value={props.member.mightEdge}></input>\r\n                <label className=\"active\" htmlFor=\"mightEdge\">Might Edge</label>\r\n              </div>\r\n              {/* Speed Edge */}\r\n              <div className=\"col s4 input-field\">\r\n                <input id=\"speedEdge\" type=\"number\" onChange={(e) => handleChange('speedEdge', e.target.value)} value={props.member.speedEdge}></input>\r\n                <label className=\"active\" htmlFor=\"speedEdge\">Speed Edge</label>\r\n              </div>\r\n              {/* Intellect Edge */}\r\n              <div className=\"col s4 input-field\">\r\n                <input id=\"intEdge\" type=\"number\" onChange={(e) => handleChange('intEdge', e.target.value)} value={props.member.intEdge}></input>\r\n                <label className=\"active\" htmlFor=\"intEdge\">Intellect Edge</label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"modal-footer\">\r\n        <button className=\"modal-close btn-flat waves-effect waves-light\">Close</button>\r\n      </div>\r\n    </form>\r\n\r\n  )\r\n}\r\n\r\nconst vowels = ['a', 'e', 'i', 'o', 'u'];\r\nconst isVowel = (letter) => {\r\n  if (vowels.includes(letter))\r\n    return true;\r\n  return false;\r\n}","import React from 'react';\r\nimport EditForm from './EditForm';\r\n\r\nexport default function EditModal(props) {\r\n  // Update member when fields change\r\n\r\n  return (\r\n    <>\r\n      <div id=\"editModal\" className=\"modal\">\r\n        {\r\n          (props.show) ?\r\n            <EditForm member={props.member} updateMember={props.updateMember} />\r\n            : ''\r\n        }\r\n      </div >\r\n    </>\r\n  )\r\n}","import React, { createContext, useState, useEffect } from 'react';\r\nimport { isNull } from 'util';\r\nimport uuid from 'uuid';\r\nimport Party from './Party';\r\nimport NewCharacter from './NewCharacter';\r\nimport EditModal from './CharacterInfo/EditModal';\r\n\r\n// Context for Party Updating functionality\r\nexport const UpdateContext = createContext();\r\n\r\nexport default function NumeneraLayout() {\r\n  // List of Party Members\r\n  const [party, setParty] = useState([]);\r\n  const [modal, showModal] = useState(false);\r\n  const [editMember, setEditMember] = useState({});\r\n\r\n  // Function for Creating New Party Members\r\n  const addMember = (member) => {\r\n    setParty(party.concat({\r\n      id: uuid(),\r\n      name: member.name,\r\n      job: member.job,\r\n      descriptors: member.descriptors,\r\n      foci: member.foci,\r\n      level: member.level,\r\n      xp: member.xp,\r\n      effort: member.effort,\r\n      mightPool: member.mightPool,\r\n      speedPool: member.speedPool,\r\n      intPool: member.intPool,\r\n      mightCurrent: member.mightPool,\r\n      speedCurrent: member.speedPool,\r\n      intCurrent: member.intPool,\r\n      mightEdge: member.mightEdge,\r\n      speedEdge: member.speedEdge,\r\n      intEdge: member.intEdge,\r\n    }));\r\n  }\r\n\r\n  // Function for Removing Party Members\r\n  const removeMember = (id) => {\r\n    let confirmation = window.confirm(`Are you sure you want to remove ${party.find(member => member.id === id).name}?`);\r\n    if (confirmation === false)\r\n      return;\r\n    let members = party.filter(member => member.id !== id);\r\n    setParty(members);\r\n  }\r\n\r\n  // Show Edit Modal\r\n  const showEdit = (id) => {\r\n    // Get Member by ID. Member Data => State => Edit Modal\r\n    setEditMember(party.find(member => member.id === id));\r\n    showModal(true);\r\n  }\r\n\r\n  // Edit Member\r\n  const updateMember = (id, property, updatedValue) => {\r\n    let index; // Index of party that will be updated\r\n\r\n    // Get Member by ID\r\n    let updatedMember = party.find((member, i) => {\r\n      if (member.id === id) {\r\n        index = i;\r\n        return true;\r\n      }\r\n      return false;\r\n    });\r\n\r\n    if (updatedMember[property] === updatedValue)\r\n      return; // Exit if property doesn't need to be updated\r\n    updatedMember[property] = updatedValue;\r\n    let updatedParty = [...party.slice(0, index), updatedMember, ...party.slice(index + 1, party.length)];\r\n    if (updatedParty !== party)\r\n      setParty(updatedParty);\r\n  }\r\n\r\n  // Get storage (if any) after mounting\r\n  useEffect(() => {\r\n    if (!isNull(JSON.parse(localStorage.getItem('party'))) && JSON.parse(localStorage.getItem('party')).length > 0) {\r\n      setParty(JSON.parse(localStorage.getItem('party')));\r\n    }\r\n\r\n  }, []);\r\n\r\n  // Update local storage when state changes\r\n  useEffect(() => {\r\n    localStorage.setItem('party', JSON.stringify(party));\r\n  });\r\n\r\n  return (\r\n    <UpdateContext.Provider value={{ party, updateMember }}>\r\n      <div className=\"container\">\r\n        {/* Modal Form for new party members */}\r\n        <NewCharacter addMember={addMember} />\r\n        {/* Edit Modal */}\r\n        <EditModal member={editMember} updateMember={updateMember} show={modal} />\r\n        {/* Party List */}\r\n        <Party party={party} removeMember={removeMember} showEdit={showEdit} />\r\n      </div>\r\n    </ UpdateContext.Provider>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n","import React, { useEffect } from 'react';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport Navbar from './components/Navbar';\r\nimport NumeneraLayout from './components/Numenera/NumeneraLayout';\r\nimport './app.scss';\r\nimport M from 'materialize-css';\r\nimport '../node_modules/materialize-css/dist/css/materialize.min.css';\r\n\r\nexport default function App() {\r\n  // Load Materialize JS on mount\r\n  useEffect(() => {\r\n    M.AutoInit();\r\n    M.Modal.init(document.querySelectorAll('.modal'), {\r\n      inDuration: 0,\r\n      outDuration: 0\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <Router>\r\n      <Navbar />\r\n      <NumeneraLayout />\r\n    </Router>\r\n  )\r\n}\r\n"],"sourceRoot":""}